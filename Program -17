FIRST COME FIRST SERVE IN DISK SCHEDULING
#include <stdio.h>
void findSeekTime(int arr[], int n, int head) {
    int seekTime = 0;
    int distance, curTrack;
    for (int i = 0; i < n; i++) {
        curTrack = arr[i];
        distance = curTrack - head;
        if (distance < 0) distance = -distance;
        seekTime += distance;
        head = curTrack;
    }
    printf("Total Seek Time: %d\n", seekTime);
}
int main() {
    int arr[] = {98, 183, 37, 122, 14, 124, 65, 67};
    int head = 53;
    int n = sizeof(arr) / sizeof(arr[0]);

    printf("Disk Requests: ");
    for (int i = 0; i < n; i++) {
        printf("%d ", arr[i]);
    }
    printf("\nInitial Head Position: %d\n", head);

    findSeekTime(arr, n, head);

    return 0;
}
