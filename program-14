OPTIMAL PAGING:
#include <stdio.h>

#define MAX_FRAMES 10
#define MAX_PAGES 100

void optimalPageReplacement(int pages[], int n, int frames) {
    int memory[MAX_FRAMES];
    int pageFaults = 0;
    int i, j, k, pos, max, found;

    for (i = 0; i < frames; i++) {
        memory[i] = -1;
    }

    for (i = 0; i < n; i++) {
        found = 0;

        for (j = 0; j < frames; j++) {
            if (memory[j] == pages[i]) {
                found = 1;
                break;
            }
        }

        if (!found) {
            pageFaults++;

            for (j = 0; j < frames; j++) {
                if (memory[j] == -1) {
                    memory[j] = pages[i];
                    found = 1;
                    break;
                }
            }

            if (!found) {
                max = -1;
                pos = -1;

                for (j = 0; j < frames; j++) {
                    int flag = 0;
                    for (k = i + 1; k < n; k++) {
                        if (memory[j] == pages[k]) {
                            flag = 1;
                            break;
                        }
                    }
                    if (flag == 0) {
                        pos = j;
                        break;
                    }
                    if (flag == 1 && k > max) {
                        max = k;
                        pos = j;
                    }
                }
                memory[pos] = pages[i];
            }
        }

        printf("Current memory frames: ");
        for (j = 0; j < frames; j++) {
            if (memory[j] != -1) {
                printf("%d ", memory[j]);
            }
        }
        printf("\n");
    }

    printf("Total page faults: %d\n", pageFaults);
}

int main() {
    int pages[MAX_PAGES];
    int n, frames;

    printf("Enter the number of pages: ");
    scanf("%d", &n);
    printf("Enter the reference string (space-separated): ");
    for (int i = 0; i < n; i++) {
        scanf("%d", &pages[i]);
    }
    printf("Enter the number of frames: ");
    scanf("%d", &frames);

    optimalPageReplacement(pages, n, frames);

    return 0;
}
