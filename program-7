INTER-PROCESS COMMUNICATION:
#include <stdio.h>
#include <stdlib.h>
#include <sys/shm.h>
#include <sys/stat.h>
#include <string.h>
#include <unistd.h>

#define SHM_SIZE 1024  // Shared memory size

void writer() {
    key_t key = ftok("shmfile", 65);
    int shmid = shmget(key, SHM_SIZE, IPC_CREAT | 0666);

    if (shmid == -1) {
        perror("shmget failed");
        exit(1);
    }

    char *data = (char *)shmat(shmid, (void *)0, 0);

    if (data == (char *)(-1)) {
        perror("shmat failed");
        exit(1);
    }

    printf("Enter data to write to shared memory: ");
    fgets(data, SHM_SIZE, stdin);

    if (shmdt(data) == -1) {
        perror("shmdt failed");
        exit(1);
    }
}

void reader() {
    key_t key = ftok("shmfile", 65);
    int shmid = shmget(key, SHM_SIZE, 0666);

    if (shmid == -1) {
        perror("shmget failed");
        exit(1);
    }

    char *data = (char *)shmat(shmid, (void *)0, 0);

    if (data == (char *)(-1)) {
        perror("shmat failed");
        exit(1);
    }

    printf("Data read from shared memory: %s\n", data);

    if (shmdt(data) == -1) {
        perror("shmdt failed");
        exit(1);
    }

    if (shmctl(shmid, IPC_RMID, NULL) == -1) {
        perror("shmctl failed");
        exit(1);
    }
}

int main() {
    int choice;
    printf("1. Write to shared memory\n");
    printf("2. Read from shared memory\n");
    printf("Enter your choice: ");
    scanf("%d", &choice);
    getchar();  // To consume the newline character left by scanf

    if (choice == 1) {
        writer();
    } else if (choice == 2) {
        reader();
    } else {
        printf("Invalid choice\n");
    }

    return 0;
}
